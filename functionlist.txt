const PI = 3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535


Function Tand(X)
	Tand = Tan(Rad(X))
End Function

Function Sind(X)
	Sind = sin(Rad(X))
End Function

Function Cosd(X)
	Cosd = cos(Rad(X))
End Function

Function Rad(X)
	Rad = X * Atn(1) / 45
End Function

Function Deg(x)
  Deg = x * 45 / Atn(1)
End Function

Function asn(X)
	if x = 1 then asn = pi /2: exit function
	asn = Atn(X / Sqr(-X * X + 1))
End Function

Function acs(X)
	acs = Atn(-X / Sqr(-X * X + 1)) + 2 * Atn(1)
End Function

function binary(b)
	binary = binaryC(b, 30)
end function

function binaryC(b, m)
	Dim i, bin, x, maxpower
	
	maxpower = m-1
	
	bin = ""  'Build the desired binary number in this string, bin.
	x = cdbl(b) 'Convert decimal string in text1 to long integer
	
	If x < 0 Then bin = bin + "1 " Else bin = bin + "0 "
	
	For i = maxpower To 0 Step -1
		If x And (2 ^ i) Then   ' Use the logical "AND" operator.
			bin = bin + "1"
		Else
			bin = bin + "0"
		End If
	Next
	
	binaryC = bin
end function


function LongToRGB(byval c)
	dim r,g,b
	
	r = c Mod &H100
	c = c \ &H100
	g = c Mod &H100
	c = c \ &H100
	b = c Mod &H100
	LongToRGB = "rgb(" & r & ", " & g & ", " & b & ")"
End function

Function Factorial(a)
	x=1
	For i=1 to a
	  x=x*i
	next 
	Factorial=x
End Function

Function IIf(bClause, sTrue, sFalse)
    If CBool(bClause) Then
        IIf = sTrue
    Else 
        IIf = sFalse
    End If
End Function

function printTime(lseconds)
	lDays = lseconds \ 86400
	lseconds = lseconds - lDays * 86400
	
	lHours = lseconds \ 3600
	lseconds = lseconds - lHours * 3600
	
	lMinutes = lseconds \ 60
	lseconds = lseconds - lMinutes * 60
	
	printTime = iif(lDays >= 10, lDays, "0" & lDays) & "  " & iif(lHours >= 10, lHours, "0" & lHours) & ":" & iif(lMinutes >= 10, lMinutes, "0" & lMinutes) & ":" & iif(lseconds >= 10, lseconds, "0" & lseconds)
end function




function str2char(sInput)
	dim i, sOut
	
	sOut = "char str[] = {"
	
	for i = 1 to len(sInput)
		if i > 1 then 
			sOut = sOut & ","
		end if
		
		sOut = sOut & "'" & mid(sInput,i,1) & "'"
	next
	
	str2char = sOut & "};"
end function

function escape(sInput)
	dim i, sOut, t
	
	for i = 1 to len(sInput)
		t = mid(sInput,i,1)
		if t = "\" or t = """" then 
			sOut = sOut & "\" & t
		else
			sOut = sOut & t
		end if
		
	next
	
	escape = sOut
end function